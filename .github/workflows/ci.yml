name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  test:
    name: Test and Lint (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    # services:
    #   qdrant:
    #     # (optional but recommended) pin image to a version or digest instead of :latest
    #     image: qdrant/qdrant@sha256:f8f833b5c8d215bb94ff20b7c68cb5f0ca2f4516c870e321a1b655141665c105
    #     ports:
    #       - 6333:6333
    #       - 6334:6334

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955   # v4.3.0

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830       # v4.3.0
        with:
          path: |
            ~/.cache/pip
            ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-
        
      - name: Ruff lint
        run: pip install ruff && ruff check . --output-format=github

      - name: Ruff format (warn only)
        run: |
          if ! ruff format . --check; then
            echo "::warning ::Some files would be reformatted by Ruff"
          fi

      # - name: Wait for Qdrant to be ready
      #   run: |
      #     echo "Waiting for Qdrant to be ready..."
      #     for i in {1..30}; do
      #       if curl -f http://localhost:6333/healthz > /dev/null 2>&1; then
      #         echo "Qdrant is ready!"
      #         curl -s http://localhost:6333/ | head -20
      #         exit 0
      #       fi
      #       echo "Attempt $i/30: Qdrant not ready yet, waiting..."
      #       sleep 2
      #     done
      #     echo "Qdrant failed to become ready"
      #     exit 1
        
      # - name: Check Qdrant Status
      #   run: |
      #     curl http://localhost:6333/readyz

      # - name: Run Tests
      #   run: |
      #     pytest -v --maxfail=2 --disable-warnings --cov=src --cov-report=term-missing
      #   env:
      #     QDRANT_HOST: localhost
      #     QDRANT_PORT: 6333
      #     QDRANT_URL: http://localhost:6333

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955   # v4.3.0

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.11"

      - name: Cache Python dependencies
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830       # v4.3.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-build-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-build-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[dev,api]'

      - name: Install build tools
        run: pip install build twine

      - name: Build package
        run: python -m build

      - name: Validate build with Twine
        run: twine check dist/*
